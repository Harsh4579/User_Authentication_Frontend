{"version":3,"sources":["shared/hooks/http-hook.js","shared/components/UIElements/Avatar.js","shared/components/UIElements/Card.js","Users/components/UserItem.js","Users/components/UserList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/FormElements/Button.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","Users/pages/Users.js","shared/Util/validators.js","shared/components/FormElements/Input.js","shared/components/FormElements/ImageUpload.js","shared/context/auth-context.js","shared/hooks/form-hook.js","places/pages/NewPlace.js","shared/components/Navigation/Mainheader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","places/pages/UpdatePlace.js","Users/pages/Auth.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js","App.js","index.js"],"names":["useHttpClient","isLoading","setIsLoading","useState","error","setError","activeHttpRequests","useRef","sendRequest","useCallback","async","url","method","arguments","length","undefined","body","headers","httpAbortController","AbortController","current","push","response","fetch","signal","responseData","json","filter","reqCtrl","ok","Error","message","err","useEffect","forEach","abortCtrl","abort","clearError","Avatar","props","React","createElement","className","style","src","image","alt","width","height","Card","_ref","header","footer","children","UserItem","Link","to","id","name","placeCount","UserList","items","map","user","key","places","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","ModalOverlay","content","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","Button","href","size","inverse","danger","exact","type","disabled","ErrorModal","onClear","LoadingSpinner","asOverlay","Users","loadedUser","setLoadedUser","users","fetchUsers","VALIDATOR_MINLENGTH","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","inputState","dispatch","useReducer","initialvalue","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","ImageUpload","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","pickImageHandler","click","AuthContext","createContext","isLoggedIn","userId","login","logout","formreducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","inputData","formValidity","NewPlace","auth","useContext","InputHandler","title","description","address","history","useHistory","formData","FormData","append","Mainheader","NavLinks","NavLink","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closedrawer","openDrawer","UpdatePlace","loadedPlaces","setLoadedPlaces","placeId","useParams","setFormData","place","fetchplace","console","log","JSON","stringify","initialValue","valid","Auth","isLoginMode","setIsLoginMode","inputHandler","email","password","switchModeHandler","prevMode","Map","mapRef","zoom","window","ol","layers","layer","Tile","source","OSM","view","View","proj","fromLonLat","lng","lat","PlaceItem","showMAP","setShowMAP","showConfirmModal","setshowConfirmeModal","closeMAPHandler","canceldeleteHandler","coordinate","onDelete","openMAPHandler","showdeletewarningHandler","PlaceList","creatorplace","onDeletePlace","UserPlace","fetchplaces","deletedPlaceId","prevPlaces","App","setIsLoggedIn","setUserId","uid","routes","Switch","Route","path","Redirect","Provider","Router","render"],"mappings":"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","file":"static/js/main.a703da97.chunk.js","sourcesContent":["import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n    const [isLoading, setIsLoading] = useState(false); // Fixed naming\r\n    const [error, setError] = useState();\r\n    const activeHttpRequests = useRef([]);\r\n\r\n    const sendRequest = useCallback(async (url, method = 'GET', body = null, headers = {}) => {\r\n        setIsLoading(true);\r\n        const httpAbortController = new AbortController();\r\n        activeHttpRequests.current.push(httpAbortController);\r\n\r\n        try {\r\n            // Ensure headers contain Content-Type if body exists\r\n            // if (body && !headers['Content-Type']) {\r\n            //     headers['Content-Type'] = 'application/json';\r\n            // }\r\n\r\n            const response = await fetch(url, {\r\n                method,\r\n                body,\r\n                headers,\r\n                signal: httpAbortController.signal,\r\n            });\r\n\r\n            const responseData=await response.json();\r\n            // try {\r\n            //     responseData = await response.json();\r\n            // } catch (err) {\r\n            //     responseData = null; // Handle non-JSON responses gracefully\r\n            // }\r\n\r\n            // Remove the abort controller from active requests\r\n            activeHttpRequests.current = activeHttpRequests.current.filter(\r\n                reqCtrl => reqCtrl !== httpAbortController\r\n            );\r\n\r\n            if (!response.ok) {\r\n                throw new Error(responseData.message);\r\n            }\r\n\r\n            setIsLoading(false);\r\n            return responseData;\r\n        } catch (err) {\r\n            setError(err.message || 'Something went wrong!');\r\n            setIsLoading(false);\r\n            throw err;\r\n        }\r\n    }, []); // Added dependencies\r\n\r\n    const clearError =() => {\r\n        setError(null);\r\n    }; // Wrapped in useCallback for consistency\r\n\r\n    useEffect(() => {\r\n        return () => {\r\n            activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n        };\r\n    }, []);\r\n\r\n    return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport './Card.css';\n\nconst Card = ({ className, style, header, footer, children }) => {\n    return (\n        <div className={`card ${className}`} style={style}>\n            {header && <div className=\"card-header\">{header}</div>}\n            <div className=\"card-content\">{children}</div>\n            {footer && <div className=\"card-footer\">{footer}</div>}\n        </div>\n    );\n};\n\nexport default Card;\n","import React from \"react\";\r\nimport \"./UserItem.css\";\r\nimport { Link } from 'react-router-dom'\r\nimport Avatar from \"../../shared/components/UIElements/Avatar\"\r\nimport Card from \"../../shared/components/UIElements/Card\"\r\nconst UserItem=props=>{\r\n    return (\r\n        <li className=\"user-item\">\r\n            <Card className=\"user-item__content\">\r\n                <Link to={`/ ${props.id}/places`}>\r\n                    <div className=\"user-item__image\">\r\n                        <Avatar image={`http://localhost:5000/${props.image}`} alt={props.name} />\r\n                    </div>\r\n                    <div className=\"user-item__info\">\r\n                        <h2>{props.name}</h2>                   \r\n                        <h3>\r\n                            {props.placeCount} {' '}\r\n                            {props.placeCount === 1 ? \"Place\" : \"Places\"};\r\n                        </h3>\r\n                    </div>\r\n                </Link>\r\n            </Card>\r\n        </li>\r\n    );\r\n};\r\nexport default UserItem;","import React from \"react\";\r\nimport UserItem from \"./UserItem\";\r\nimport Card from \"../../shared/components/UIElements/Card\"\r\nimport './UserList.css';\r\nconst UserList=props=>{\r\n    if(props.items.length===0){\r\n        return (\r\n        <div className=\"center\">\r\n            <Card>\r\n                <h2>No User Found!</h2>\r\n            </Card>\r\n        </div>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <ul className=\"users-list\">\r\n        {props.items.map(user => (\r\n            <UserItem key={user.id} id={user.id} image={user.image} name={user.name} placeCount={user.places.length} />\r\n        ))}\r\n    </ul>\r\n    );\r\n};\r\nexport default UserList;","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Modal.css';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Backdrop from './Backdrop';\r\nconst ModalOverlay = props => {\r\n\tconst content = (\r\n\t\t<div className={`modal ${props.className}`} style={props.style}>\r\n\t\t\t<header className={`modal__header ${props.headerClass}`}>\r\n\t\t\t\t<h2>{props.header}</h2>\r\n\t\t\t</header>\r\n\t\t\t<form onSubmit={props.onSubmit ? props.onSubmit : event => event.preventDefault()}>\r\n\t\t\t\t<div className={`modal__content ${props.contentClass}`}>\r\n\t\t\t\t\t{props.children}\r\n\t\t\t\t</div>\r\n\t\t\t\t<footer className={`modal__footer ${props.footerClass}`}>\r\n\t\t\t\t\t{props.footer}\r\n\t\t\t\t</footer>\r\n\t\t\t</form>\r\n\t\t</div>\r\n\t);\r\n\treturn ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\nconst Modal = props => {\r\n\treturn (<React.Fragment>\r\n\t\t{props.show && <Backdrop onClick={props.onCancel} />}\r\n\t\t<CSSTransition in={props.show} mountOnEnter unmountOnExit timeout={200} classNames=\"modal\">\r\n\t\t\t<ModalOverlay {...props} />\r\n\t\t</CSSTransition>\r\n\t</React.Fragment>\r\n\t);\r\n};\r\nexport default Modal;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n    <Modal\n      onCancel={props.onClear}\n      header=\"An Error Occurred!\"\n      show={!!props.error}\n      footer={<Button onClick={props.onClear}>Okay</Button>}\n    >\n      <p>{props.error}</p>\n    </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React,{useEffect, useState} from \"react\";\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport UserList from \"../components/UserList\";\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nconst Users=()=>{\r\n    // const USERS = [{ id: '1', name: 'Harsh', place: 'Jamshedpur', image: '../../../public/harsh.jpg', places: 3 }];\r\n    const {isLoading,error,sendRequest,clearError}=useHttpClient();\r\n    const [loadedUser,setLoadedUser]=useState();\r\n    useEffect(()=>{\r\n        const fetchUsers=async ()=>{\r\n            // setisLoding(true);\r\n            try{\r\n                const responseData=await sendRequest('http://localhost:5000/api/users');\r\n\r\n                setLoadedUser(responseData.users);\r\n            }catch(err){\r\n                \r\n            }\r\n        };\r\n        fetchUsers();\r\n    },[sendRequest])\r\n    // const errorHandler=()=>{\r\n    //     setError(null);\r\n    // }\r\n    return <React.Fragment> \r\n        <ErrorModal error={error} onClick={clearError}/>\r\n        {isLoading && <div className=\"center\">\r\n            <LoadingSpinner/>\r\n            </div>\r\n        }\r\n    {!isLoading && loadedUser && <UserList items={loadedUser} />}\r\n    </React.Fragment>;\r\n};\r\nexport default Users;","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer,useEffect } from 'react';\r\nimport './Input.css';\r\nimport { validate } from '../../Util/validators';\r\nconst inputReducer = (state, action) => {\r\n\tswitch (action.type) {\r\n\t\tcase 'CHANGE':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tvalue: action.val,\r\n\t\t\t\tisValid: validate(action.val, action.validators)\r\n\t\t\t};\r\n\t\tcase 'TOUCH':\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisTouched: true\r\n\t\t\t}\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\nconst Input = props => {\r\n\tconst [inputState, dispatch] = useReducer(inputReducer, { value: props.initialvalue || '', isTouched: false, isValid: props.isValid || false });\r\n\tconst { id, onInput } = props;\r\n\tconst { value, isValid } = inputState;\r\n\tuseEffect(() => {\r\n\t\tonInput(id, value, isValid)\r\n\t}, [id, value, isValid, onInput]);\r\n\tconst changeHandler = event => {\r\n\t\tdispatch({ type: 'CHANGE', val: event.target.value, validators: props.validators });\r\n\t};\r\n\tconst touchHandler = () => {\r\n\t\tdispatch({\r\n\t\t\ttype: 'TOUCH'\r\n\t\t});\r\n\t};\r\n\tconst element = props.element === 'input' ? (<input id={props.id} type={props.type} placeholder={props.placeholder} onChange={changeHandler} onBlur={touchHandler} value={inputState.value} />\r\n\t) :\r\n\t\t(<textarea id={props.id} rows={props.rows || 3} onChange={changeHandler} onBlur={touchHandler} value={inputState.value} />);\r\n\treturn (<div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\r\n\t\t<label htmlFor={props.id}>{props.label}</label>\r\n\t\t{element}\r\n\t\t{!inputState.isValid && inputState.isTouched && <p> {props.errorText}</p>\r\n\t\t}\r\n\t</div>);\r\n};\r\nexport default Input;","import React,{useRef,useState,useEffect} from 'react';\r\nimport Button from './Button';\r\nimport './ImageUpload.css';\r\nconst ImageUpload=props=>{\r\n    const [file,setFile]=useState();\r\n    const [previewUrl,setPreviewUrl]=useState();\r\n    const [isValid, setIsValid]=useState(false);\r\n\r\n    const filePickerRef=useRef();\r\n    useEffect(()=>{\r\n        if(!file){\r\n            return ;\r\n        }\r\n        const fileReader=new FileReader();\r\n        fileReader.onload=()=>{\r\n            setPreviewUrl(fileReader.result)\r\n        }\r\n        fileReader.readAsDataURL(file);\r\n    },[file])\r\n    const pickedHandler=event=>{\r\n        let pickedFile;\r\n        let fileIsValid=isValid;\r\n        if(event.target.files && event.target.files.length===1){\r\n            pickedFile= event.target.files[0];\r\n            setFile(pickedFile);\r\n            setIsValid(true);\r\n            fileIsValid=true;\r\n        \r\n        }else{\r\n            setIsValid(false);\r\n            fileIsValid=false;\r\n        }\r\n        props.onInput(props.id,pickedFile,fileIsValid);\r\n    }\r\n    const pickImageHandler=()=>{\r\n        filePickerRef.current.click();\r\n    }\r\n    return(\r\n        <div className='form-control'>\r\n            <input \r\n            id={props.id} \r\n            ref={filePickerRef}\r\n            style={{display: 'none'}}\r\n             type='file' \r\n             accept='.jpg, .png, .jpeg'\r\n             onChange={pickedHandler}/>\r\n            <div className={`image-upload ${props.center && 'center'}`}>\r\n                <div className='image-upload__preview'>\r\n                    {previewUrl && <img src={previewUrl} alt='Preview'/>}\r\n                    {!previewUrl && <p>Please pick an Image</p>}\r\n                </div>\r\n                <Button type='button' onClick={pickImageHandler}>Pick Image</Button>\r\n            </div>\r\n            {!isValid && <p>{props.errorText}</p>}\r\n        </div>\r\n    )\r\n}\r\nexport default ImageUpload;","import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n\tisLoggedIn: false,\r\n\tuserId: null,\r\n\tlogin: () => { },\r\n\tlogout: () => { }\r\n});\r\n","import { useCallback, useReducer } from 'react';\r\nconst formreducer = (state, action) => {\r\n    switch (action.type) {\r\n        case \"INPUT_CHANGE\":\r\n            let formIsValid = true;\r\n            for (const inputId in state.inputs) {\r\n                if (!state.inputs[inputId]) {\r\n                    continue;\r\n                }\r\n                if (inputId === action.inputId) {\r\n                    formIsValid = formIsValid && action.isValid;\r\n                }\r\n                else {\r\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n                }\r\n            }\r\n            return {\r\n                ...state,\r\n                inputs: {\r\n                    ...state.inputs,\r\n                    [action.inputId]: {\r\n                        value: action.value, isValid: action.isValid\r\n                    }\r\n                },\r\n                isValid: formIsValid\r\n            };\r\n        case \"SET_DATA\":\r\n            return {\r\n                inputs: action.inputs,\r\n                isValid: action.formIsValid\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n};\r\nexport const useForm = (initialInputs,initialFormValidity) => {\r\n    const [formState, dispatch] = useReducer(formreducer, {\r\n        inputs: initialInputs,\r\n        isValid: initialFormValidity\r\n    });\r\n    const InputHandler = useCallback((id, value, isValid) => {\r\n        dispatch({ type: 'INPUT_CHANGE', value: value, isValid: isValid, inputId: id });\r\n    }, []);\r\n    const setFormData = useCallback((inputData, formValidity) => {\r\n        dispatch({\r\n            type: 'SET_DATA',\r\n            inputs: inputData,\r\n            formIsValid: formValidity\r\n        });\r\n    },[]);\r\n    return [formState, InputHandler, setFormData];\r\n};","import React,{useContext} from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport './NewPlace.css';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\r\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/Util/validators';\r\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\r\nimport ImageUpload from \"../../shared/components/FormElements/ImageUpload\";\r\nimport { AuthContext } from \"../../shared/context/auth-context\";\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nconst NewPlace = () => {\r\n    const auth= useContext(AuthContext);\r\n    const {isLoading,error,sendRequest,clearError}=useHttpClient();\r\n    const [formState, InputHandler]=useForm(\r\n        {\r\n            title: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            description: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            address: {\r\n                value: '',\r\n                isValid: false\r\n            },\r\n            image:{\r\n                value: null,\r\n                isValid: false\r\n            }\r\n        }, false\r\n    );\r\n    const history = useHistory();\r\n    const placeSubmitHandler = async event => {\r\n        event.preventDefault();\r\n        // console.log(formState.inputs);\r\n        try{\r\n            const formData=new FormData();\r\n            formData.append('title',formState.inputs.title.value);\r\n            formData.append('description',formState.inputs.description.value);\r\n            formData.append('address',formState.inputs.address.value);\r\n            formData.append('creator',auth.userId);\r\n            formData.append('image',formState.inputs.image.value)\r\n            await sendRequest('http://localhost:5000/api/places','POST',formData\r\n        );\r\n        history.push('/');\r\n        }catch(err){}\r\n        \r\n    };\r\n    return (<React.Fragment> \r\n        <ErrorModal error={error} onClear={clearError}/>\r\n    <form className=\"place-form\" onSubmit={placeSubmitHandler}>\r\n        {isLoading && <LoadingSpinner asOverlay/>}\r\n        <Input id=\"title\" element=\"input\" type=\"text\" label=\"Title\" validators={[VALIDATOR_REQUIRE()]} errorText=\"Please enter correct Title\" onInput={InputHandler} />\r\n        <Input id=\"description\" element=\"textarea\" label=\"Description\" validators={[VALIDATOR_MINLENGTH(5)]} errorText=\"Please enter valid description(min. length of 5 characters)\" onInput={InputHandler} />\r\n        <Input id=\"address\" element=\"input\" type=\"input\" label=\"Address\" validators={[VALIDATOR_REQUIRE()]} errorText=\"Please enter valid address\" onInput={InputHandler} />\r\n        <ImageUpload id='image' onInput={InputHandler} errorText=\"Please provide an image\"/>\r\n        <Button type=\"submit\" disabled={!formState.isValid}>ADD PLACE</Button>\r\n    </form>\r\n    </React.Fragment>);\r\n};\r\n export default NewPlace;","import React from 'react';\r\nimport './Mainheader.css';\r\nconst Mainheader = props => {\r\n    return <header className=\"main-header\">{props.children} </header>;\r\n};\r\nexport default Mainheader;","import React,{ useContext} from 'react';\r\nimport { NavLink } from \"react-router-dom\";\r\nimport {AuthContext} from '../../context/auth-context';\r\nimport './NavLinks.css';\r\n\r\nconst NavLinks = props => {\r\n    const auth = useContext(AuthContext);\r\n    return <ul className=\"nav-links\">\r\n        <li>\r\n            <NavLink to=\"/\" exact>All Users!</NavLink>\r\n        </li>\r\n        {auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to={`/${auth.userId}/places`}>My Places</NavLink>\r\n            </li>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to=\"/places/new\">Add Place</NavLink>\r\n            </li>\r\n        )}\r\n        {!auth.isLoggedIn && (\r\n            <li>\r\n                <NavLink to=\"/auth\">Authenticate</NavLink>\r\n            </li>\r\n        )}\r\n        {auth.isLoggedIn && (\r\n            <li>\r\n                <button onClick={auth.logout}>LOGOUT</button>\r\n            </li>\r\n        )}\r\n    </ul>\r\n}\r\nexport default NavLinks;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport {CSSTransition} from 'react-transition-group';\r\nimport './SideDrawer.css';\r\nconst SideDrawer = props => {\r\n\tconst content =\r\n\t\t<CSSTransition in={props.show} timeout={200} classNames=\"slide-in-left\" mountOnEnter unmountOnExit>\r\n\t\t\t<aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n\t</CSSTransition>\r\n\treturn ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\r\n};\r\nexport default SideDrawer;","import React, { useState } from \"react\"\r\nimport Mainheader from \"./Mainheader\"\r\nimport {Link } from \"react-router-dom\"\r\nimport './MainNavigation.css'\r\nimport NavLinks from './NavLinks'\r\nimport Backdrop from '../UIElements/Backdrop'\r\nimport SideDrawer from './SideDrawer'\r\nconst MainNavigation = props => {\r\n    const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n    const openDrawer = () => {\r\n        setDrawerIsOpen(true);\r\n    };\r\n    const closedrawer = () => {\r\n        setDrawerIsOpen(false);\r\n    };\r\n    return (\r\n        <React.Fragment>\r\n            {drawerIsOpen && <Backdrop onClick={closedrawer} />}\r\n            <SideDrawer show={drawerIsOpen} onClick={closedrawer}>\r\n                <nav className=\"main-navigation__drawer-nav\">\r\n                    <NavLinks />\r\n                </nav>\r\n            </SideDrawer>\r\n            <Mainheader>\r\n                <button className=\"main-navigation__menu-btn\" onClick={openDrawer}>\r\n                <span/>\r\n                <span/>\r\n                <span/>\r\n            </button>\r\n            <h1 className=\"main-navigation__tile\">\r\n            <Link to='/'>Your Place</Link>\r\n            </h1>\r\n            <nav className=\"main-navigation__header-nav\">\r\n                <NavLinks/>\r\n            </nav>\r\n            </Mainheader>\r\n        </React.Fragment>\r\n    );\r\n}\r\nexport default MainNavigation;","import React, { useEffect,useState,useContext } from 'react';\r\nimport { useParams,useHistory } from 'react-router-dom';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_REQUIRE } from '../../shared/Util/validators';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport './NewPlace.css';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n\r\nconst UpdatePlace = () => {\r\n\tconst {isLoading,error,sendRequest,clearError}=useHttpClient();\r\n\tconst [loadedPlaces,setLoadedPlaces]=useState();\r\n\tconst auth=useContext(AuthContext);\r\n\tconst placeId = useParams().placeId;\r\n\tconst history=useHistory();\r\n\tconst [formState, InputHandler,setFormData]=useForm({\r\n\t\ttitle: {\r\n\t\t\tvalue: '',\r\n\t\t\tisValid: false\r\n\t\t},\r\n\t\tdescription: {\r\n\t\t\tvalue: '',\r\n\t\t\tisValid: false\r\n\t\t}\r\n\t},\r\n\tfalse\r\n\t)\r\n\t// const IdentifiedPlace = Dummy.find(p => p.id === placeId);\r\n\tuseEffect(()=>{\r\n\t\tconst fetchplace=async ()=>{\r\n\t\t\ttry{\r\n\t\t\t\tconst responseData=await sendRequest(`http://localhost:5000/api/places/${placeId}`);\r\n\t\t\t\tsetLoadedPlaces(responseData.place);\r\n\t\t\t\tsetFormData({\r\n\t\t\t\t\ttitle: {\r\n\t\t\t\t\t\tvalue: responseData.place.title,\r\n\t\t\t\t\t\tisValid: true\r\n\t\t\t\t\t},\r\n\t\t\t\t\tdescription: {\r\n\t\t\t\t\t\tvalue: responseData.place.description,\r\n\t\t\t\t\t\tisValid: true\r\n\t\t\t\t\t},\r\n\t\t\t\t}, true);\r\n\t\t\t}catch(err){}\r\n\t\t}\r\n\t\tfetchplace(); \r\n\t},[sendRequest,placeId,setFormData])\r\n\t\r\n\t\r\n\tconst placeUpdateSubmitHandler = async event => {\r\n\t\tevent.preventDefault();\r\n\t\ttry{\r\n\t\t\tconsole.log(formState.inputs);\r\n\t\t\tawait sendRequest(`http://localhost:5000/api/places/${placeId}`,'PATCH',JSON.stringify({\r\n\t\t\t\ttitle: formState.inputs.title.value,\r\n\t\t\t\tdescription: formState.inputs.description.value\r\n\t\t\t}),{\r\n\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t})\r\n\t\t\thistory.push('/'+auth.userId+ '/places');\r\n\t\t}catch(err){}\r\n\t};\r\n\tif (isLoading) {\r\n\t\treturn (\r\n\t\t\t<div className=\"center\"><LoadingSpinner/></div>\r\n\t\t)\r\n\t}\r\n\tif (!loadedPlaces && !error) {\r\n\t\treturn <h2 className=\"center\">Could not find Place :</h2>\r\n\t}\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ErrorModal error={error} onClear={clearError}/>\r\n\t\t{!isLoading && loadedPlaces && (<form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\r\n\t\t<Input id=\"title\"\r\n\t\t\telement=\"input\"\r\n\t\t\ttype=\"text\"\r\n\t\t\tlabel=\"Title\"\r\n\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\r\n\t\t\terrorText=\"Plase Enter Valid Title\"\r\n\t\t\tonInput={InputHandler}\r\n\t\t\tinitialValue={loadedPlaces.title}\r\n\t\t\tvalid={true}></Input>\r\n\t\t<Input id=\"description\"\r\n\t\t\telement=\"textarea\"\r\n\t\t\tlabel=\"Description\"\r\n\t\t\tvalidators={[VALIDATOR_MINLENGTH(5)]}\r\n\t\t\terrorText=\"Plase Enter Valid Description\"\r\n\t\t\tonInput={InputHandler}\r\n\t\t\tinitialValue={loadedPlaces.description}\r\n\t\t\tvalid={true}/>\r\n\t\t<Button type=\"submit\" disabled={!formState.isValid}>UPDATE PLACE</Button>\r\n\t</form>)}\r\n\t</React.Fragment>);\r\n};\r\nexport default UpdatePlace;","import React, { useState,useContext } from 'react';\r\nimport './Auth.css';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport { VALIDATOR_MINLENGTH, VALIDATOR_EMAIL, VALIDATOR_REQUIRE } from '../../shared/Util/validators';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport Button from '../../shared/components/FormElements/Button';\r\n\r\nconst Auth = () => {\r\n\tconst auth = useContext(AuthContext);\r\n\tconst [isLoginMode,setIsLoginMode] = useState(true);\r\n\tconst {isLoading,error,sendRequest,clearError}=useHttpClient();\r\n\tconst [formState, inputHandler, setFormData] = useForm({\r\n\t\temail: {\r\n\t\t\tvalue: '',\r\n\t\t\tisValid: false\r\n\t\t},\r\n\t\tpassword: {\r\n\t\t\tvalue: '',\r\n\t\t\tisValid: false\r\n\t\t}\r\n\t},false\r\n\t);\r\n\tconst switchModeHandler = () => {\r\n\t\tif (!isLoginMode) {\r\n\t\t\tsetFormData({\r\n\t\t\t\t...formState.inputs,\r\n\t\t\t\tname: undefined,\r\n\t\t\t\timage: undefined\r\n\t\t\t}, formState.inputs.email.isValid && formState.inputs.password.isValid);\r\n\t\t}\r\n\t\telse {\r\n\t\t\tsetFormData({\r\n\t\t\t\t...formState.inputs,\r\n\t\t\t\tname: {\r\n\t\t\t\t\tvalue: '',\r\n\t\t\t\t\tisValid: false\r\n\t\t\t\t},\r\n\t\t\t\timage: {\r\n\t\t\t\t\tvalue: null,\r\n\t\t\t\t\tisValid: false\r\n\t\t\t\t}\r\n\t\t\t},false)\r\n\t\t}\r\n\t\tsetIsLoginMode(prevMode => !prevMode);\r\n\t};\r\n\tconst authSubmitHandler = async event => {\r\n\t\tevent.preventDefault();\r\n\t\t// setisLoding(true);\r\n\t\t// console.log(formState.inputs);\r\n\r\n\t\tif(isLoginMode)\r\n\t\t{\r\n\t\t\ttry{\r\n\t\t\t\tconst responseData= await sendRequest('http://localhost:5000/api/users/login','POST',\r\n\t\t\t\t\tJSON.stringify({\r\n\t\t\t\t\t\t// name: formState.inputs.name.value,\r\n\t\t\t\t\t\temail: formState.inputs.email.value,\r\n\t\t\t\t\t\tpassword:formState.inputs.password.value\r\n\t\t\t\t\t}),\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\t'Content-Type': 'application/json'\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t\tauth.login(responseData.user.id);\r\n\t\t\t}catch(err){}\r\n\t\t\t// console.log(responseData);\r\n\t\t}else{\r\n\t\t\ttry{\r\n\t\t\t\tconst formData =new FormData();\r\n\t\t\t\tformData.append('email',formState.inputs.email.value);\r\n\t\t\t\tformData.append('name',formState.inputs.name.value);\r\n\t\t\t\tformData.append('password',formState.inputs.password.value);\r\n\t\t\t\tformData.append('image',formState.inputs.image.value);\r\n\t\t\t\tconst responseData= await sendRequest('http://localhost:5000/api/users/signup','POST',\r\n\t\t\t\t\tformData ,\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\r\n\t\t\t\tauth.login(responseData.user.id);\r\n\t\t\t}\t\r\n\t\t\tcatch(err){\r\n\t\t\t\t// console.log(err);\r\n\t\t\t\t// setisLoding(false);\r\n\t\t\t\t// setError(err.message || 'Something went wrong, Please try again');\r\n\t\t\t}\r\n\t\t}\r\n\t\t// console.log(formState.inputs);\r\n\t};\r\n\t\r\n\treturn (\r\n\t<React.Fragment>\r\n\t\t<ErrorModal error={error} onClear={clearError}/>\r\n\t<Card className=\"authentication\">\r\n\t\t{isLoading && <LoadingSpinner asOverlay/>}\r\n\t\t<h2>Login Required</h2>\r\n\t\t<hr />\r\n\t\t<form onSubmit={authSubmitHandler}>\r\n\t\t\t{!isLoginMode && (<Input\r\n\t\t\t\telement=\"input\"\r\n\t\t\t\tid=\"name\"\r\n\t\t\t\ttype=\"text\"\r\n\t\t\t\tlabel=\"Name\"\r\n\t\t\t\tvalidators={[VALIDATOR_REQUIRE()]}\r\n\t\t\t\terrorText=\"Please Enter a Name\"\r\n\t\t\t\tonInput={inputHandler}\r\n\t\t\t/>\r\n\t\t\t)}\r\n\t\t\t{!isLoginMode && <ImageUpload center id='image' onInput={inputHandler} errorText=\"Please provide an image\"/>}\r\n\t\t\t<Input element=\"input\"\r\n\t\t\t\tid=\"email\"\r\n\t\t\t\ttype=\"email\"\r\n\t\t\t\tlabel=\"E-Mail\"\r\n\t\t\t\tvalidators={[VALIDATOR_EMAIL()]}\r\n\t\t\t\terrorText=\"Please Enter valid email\"\r\n\t\t\t\tonInput={inputHandler}\r\n\t\t\t/>\r\n\t\t\t<Input element=\"input\"\r\n\t\t\t\tid=\"password\"\r\n\t\t\t\ttype=\"password\"\r\n\t\t\t\tlabel=\"Password\"\r\n\t\t\t\tvalidators={[VALIDATOR_MINLENGTH(5)]}\r\n\t\t\t\terrorText=\"Please Enter valid password!\"\r\n\t\t\t\tonInput={inputHandler}\r\n\t\t\t/>\r\n\t\t\t<Button type=\"submit\" disabled={!formState.isValid} >{isLoginMode ? 'LOGIN': 'SignUp'}</Button>\r\n\t\t</form>\r\n\t\t<Button inverse onClick={switchModeHandler}>Switch to {isLoginMode ? 'SignUp' : 'LOGIN'}</Button>\r\n\t\t</Card>\r\n\t</React.Fragment>\r\n\t);\r\n};\r\nexport default Auth;","import React, { useRef, useEffect } from 'react';\r\nimport './Map.css';\r\nconst Map = props => {\r\n    const mapRef = useRef();\r\n\r\n    const { center, zoom } = props;\r\n\r\n    useEffect(() => {\r\n        new window.ol.Map({\r\n            target: mapRef.current.id,\r\n            layers: [\r\n                new window.ol.layer.Tile({\r\n                    source: new window.ol.source.OSM()\r\n                })\r\n            ],\r\n            view: new window.ol.View({\r\n                center: window.ol.proj.fromLonLat([center.lng, center.lat]),\r\n                zoom: zoom\r\n            })\r\n        });\r\n    }, [center, zoom]);\r\n\r\n    return (\r\n        <div\r\n            ref={mapRef}\r\n            className={`map ${props.className}`}\r\n            style={props.style}\r\n            id=\"map\"\r\n        ></div>\r\n    );\r\n};\r\nexport default Map;","import React, { useState,useContext } from 'react';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport Map from '../../shared/components/UIElements/Map';\r\nimport Modal from '../../shared/components/UIElements/Modal';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './PlaceItem.css'\r\nconst PlaceItem = props => {\r\n\tconst auth = useContext(AuthContext);\r\n\tconst {isLoading,error,sendRequest,clearError}=useHttpClient();\r\n\tconst [showMAP, setShowMAP] = useState(false);\r\n\tconst [showConfirmModal, setshowConfirmeModal] = useState(false);\r\n\tconst openMAPHandler = () => setShowMAP(true);\r\n\tconst closeMAPHandler = () => setShowMAP(false);\r\n\tconst showdeletewarningHandler = () => {\r\n\t\tsetshowConfirmeModal(true);\r\n\t};\r\n\tconst canceldeleteHandler = () => {\r\n\r\n\t\tsetshowConfirmeModal(false);\r\n\t};\r\n\tconst confirmdeleteHandler = async () => {\r\n\t\tsetshowConfirmeModal(false);\r\n\t\ttry{\r\n\t\t\tawait sendRequest(`http://localhost:5000/api/places/${props.id}`,'DELETE')\r\n\t\t\tprops.onDelete(props.id);\r\n\t\t}catch(err){}\r\n\t\tconsole.log(\"Deleting...\");\r\n\t};\r\n\treturn (\r\n\t\t<React.Fragment>\r\n\t\t\t<ErrorModal error={error} onClear={clearError}/>\r\n\t\t\t<Modal show={showMAP} onCancel={closeMAPHandler} header={props.address} contentClass=\"place-item__modal-content\" footerClass=\"place-item__modal-actions\" footer={<Button onClick={closeMAPHandler}>CLOSE</Button>}>\r\n\t\t\t\t<div className=\"map-container\">\r\n\t\t\t\t\t<Map center={props.coordinate} zoom={16} />\r\n\t\t\t\t</div>\r\n\t\t\t</Modal>\r\n\t\t\t<Modal\r\n\t\t\t\tshow={showConfirmModal}\r\n\t\t\t\tonCancel={canceldeleteHandler}\r\n\t\t\t\theader=\"Are you sure\" footerClass=\"place-item__modal-actions\"\r\n\t\t\t\tfooter={\r\n\t\t\t\t\t<React.Fragment>\r\n\t\t\t\t\t\t<Button inverse onClick={canceldeleteHandler}>Cancel</Button>\r\n\t\t\t\t\t\t<Button inverse onClick={confirmdeleteHandler}>Delete</Button>\r\n\t\t\t\t\t</React.Fragment>\r\n\t\t\t}>\r\n\t\t\t<p>Do you want to delete this place?</p>\r\n\t\t\t</Modal>\r\n\t\t<li className='place-item'>\r\n\t\t<Card className='place-item__content'>\r\n\t\t\t{isLoading && <LoadingSpinner asOverlay/>}\r\n\t\t\t<div className='place-item__image'>\r\n\t\t\t\t<img src={`http://localhost:5000/${props.image}`} alt={props.title} />\r\n\t\t\t</div>\r\n\t\t\t<div className='place-item__info'\t>\r\n\t\t\t\t<h2>{props.title}</h2>\r\n\t\t\t\t<h2>{props.address}</h2>\r\n\t\t\t\t<h2>{props.description}</h2>\r\n\t\t\t</div>\r\n\t\t\t\t\t<div className='place-item__actions'>\r\n\t\t\t\t\t\t<Button inverse onClick={openMAPHandler}>VIEW ON MAP</Button>\r\n\r\n\t\t\t\t\t\t{auth.isLoggedIn && (\r\n\t\t\t\t\t\t\t<Button to={`/places/${props.id}`}>\r\n\t\t\t\t\t\t\t\tEDIT\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{auth.isLoggedIn && (\r\n\t\t\t\t\t\t\t<Button danger onClick={showdeletewarningHandler}>\r\n\t\t\t\t\t\t\t\tDELETE\r\n\t\t\t\t\t\t\t</Button>\r\n\t\t\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</Card>\r\n\t\t\t</li>\r\n\t\t</React.Fragment>\r\n\t);\r\n};\r\nexport default PlaceItem;","import React from 'react';\r\nimport './PlaceList.css';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport PlaceItem from './PlaceItem';\r\nconst PlaceList = props => {\r\n\tif (props.items.length === 0) {\r\n\t\treturn <div className=\"place-list-center\">\r\n\t\t\t<Card>\r\n\t\t\t\t<h2>No place found!!</h2>\r\n\t\t\t\t<Button to='/a'>Share place</Button>\r\n\t\t\t</Card>\r\n\t\t</div>\r\n\t}\r\n\treturn <ul className=\"place-list\">\r\n\t\t{props.items.map(place => <PlaceItem key={place.id} \r\n\t\tid={place.id} \r\n\t\timage={place.image} \r\n\t\ttitle={place.title} \r\n\t\tdescription={place.description} \r\n\t\taddress={place.address} \r\n\t\tcreatorplace={place.creatorplace} \r\n\t\tonDelete={props.onDeletePlace} />)}\r\n\t</ul>\r\n};\r\nexport default PlaceList;","import React,{useEffect, useState} from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport PlaceList from '../components/PlaceList';\r\n\r\nconst UserPlace = () => {\r\n\tconst [loadedPlaces,setLoadedPlaces]=useState();\r\n    const {isLoading,error,sendRequest,clearError}=useHttpClient();\r\n\tconst userId = useParams().userId.trim();\r\n\tuseEffect(()=>{\r\n\t\tconst fetchplaces=async ()=>{\r\n\t\t\ttry{\r\n\t\t\t\tconst responseData=await sendRequest(`http://localhost:5000/api/places/user/${userId}`);\r\n\t\t\t\tsetLoadedPlaces(responseData.places);\r\n\t\t\t}catch(err){}\r\n\t\t};\r\n\t\tfetchplaces();\r\n\t},[sendRequest,userId])\r\n\tconst placeDeleteHandler=deletedPlaceId=>{\r\n\t\tsetLoadedPlaces(prevPlaces=>prevPlaces.filter(place=>place.id!==deletedPlaceId));\r\n\t}\r\n\t// const loadedPlaces = Dummy.filter(place => place.creatorplace === userId);\r\n\treturn (<React.Fragment>\r\n\t\t<ErrorModal error={error} onClear={clearError}/>\r\n\t\t{isLoading && (\r\n\t\t\t<div className='center'>\r\n\t\t\t<LoadingSpinner/>\r\n\t\t\t</div>)}\r\n\t\t{!isLoading && loadedPlaces && <PlaceList items={loadedPlaces} onDeletePlace={placeDeleteHandler} />}\r\n\t\t</React.Fragment>);\r\n};\r\nexport default UserPlace;","import React, {useState,useCallback} from 'react';\r\nimport { BrowserRouter as Router,Route,Redirect,Switch} from 'react-router-dom';\r\nimport Users from './Users/pages/Users'\r\nimport NewPlace from './places/pages/NewPlace';\r\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\r\nimport UpdatePlace from './places/pages/UpdatePlace';\r\nimport Auth from '../src/Users/pages/Auth';\r\nimport { AuthContext } from './shared/context/auth-context';\r\nimport UserPlace from './places/pages/UserPlaces';\r\nfunction App() {\r\n    const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n    const [userId, setUserId] = useState(false);\r\n    const login = useCallback((uid) => {\r\n        setIsLoggedIn(true);\r\n        setUserId(uid);\r\n    }, []);\r\n    const logout = useCallback(() => {\r\n        setIsLoggedIn(false);\r\n        setUserId(null);\r\n    }, [])\r\n    let routes;\r\n    if (isLoggedIn) {\r\n        routes = (\r\n            <Switch>\r\n                <Route path='/' exact>\r\n                    <Users />\r\n                </Route>\r\n                <Route path='/:userId/places' exact>\r\n                    <UserPlace />\r\n                </Route>\r\n                <Route path='/places/new' exact>\r\n                    <NewPlace />\r\n                </Route>\r\n                <Route path='/places/:placeId'>\r\n                    <UpdatePlace />\r\n                </Route>\r\n                <Redirect to='/' />\r\n            </Switch>\r\n        );\r\n    }\r\n    else {\r\n        routes = (\r\n            <Switch>\r\n                <Route path='/' exact>\r\n                    <Users />\r\n                </Route>\r\n                <Route path='/:userId/places' exact>\r\n                    <UserPlace />\r\n                </Route>\r\n                <Route path='/auth'>\r\n                    <Auth />\r\n                </Route>\r\n                <Redirect to='/auth'/>\r\n            </Switch>\r\n        );\r\n    }\r\n    return (\r\n        <AuthContext.Provider value={{isLoggedIn: isLoggedIn,userId:userId, login: login, logout: logout}}>\r\n            <Router>\r\n            <MainNavigation />\r\n                <main>{routes}</main>\r\n            </Router>\r\n        </AuthContext.Provider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}